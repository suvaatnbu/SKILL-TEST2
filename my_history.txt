    1  wsl
    2  exit
    3  cat /etc/fstab
    4  sudo mount /mount/point
    5  sudo mount /dev/sdX1 /mnt
    6  sudo fsck /dev/sdX1
    7  exit
    8  dmesg | tail -50
    9  dmesg | grep -i mount
   10  lsblk
   11  ls /mnt/d
   12  cd /mnt/d
   13  cd TCS
   14  ls -l
   15  sudo mount /dev/sdX1 /mnt
   16  NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
   17  sda      8:0    0  100G  0 disk
   18  ├─sda1   8:1    0   96G  0 part /
   19  ├─sda2   8:2    0    4G  0 part [SWAP]
   20  NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
   21  sda      8:0    0  100G  0 disk
   22  ├─sda1   8:1    0   96G  0 part /
   23  ├─sda2   8:2    0    4G  0 part [SWAP]
   24  sudo nano /etc/fstab
   25  sudo reboot
   26  ps -p 1 -o comm=
   27  sudo nano /etc/fstab
   28  wsl.exe --version
   29  uname -a
   30  ps -p 1 -o comm=
   31  wsl -l -v
   32  exit
   33  sudo nano /etc/wsl.conf
   34  wsl --shutdown
   35  exit
   36  ps -p 1 -o comm=
   37  systemctl list-units
   38  ps -p 1 -o comm=
   39  sudo systemctl start ssh
   40  exit
   41  ls /mt/d
   42  ls /mnt/d
   43  cd /mnt/d
   44  cd TCS
   45  dmesg | tail -n 50
   46  cat /etc/fstab
   47  lsblk -f
   48  sudo fdisk -l
   49  sudo fdisk /dev/sdb
   50  exit
   51  sudo fdisk /dev/sdb
   52  sudo mount -a
   53  ls /mnt/d
   54  cd /mnt/d
   55  sudo nano /etc/fstab
   56  sudo mount -a
   57  sudo nano /etc/fstab
   58  sudo mkdir -p /mnt/data
   59  sudo mount -a
   60  sudo nano /etc/fstab
   61  sudo mount -a
   62  sudo nano /etc/fstab
   63  sudo mount -a
   64  ls /mnt/d
   65  cd /mnt/d
   66  cd D:\TCS\ASSIGNMENTKUBTERNESS\learner-report-k8s-helm-jenkins\k8s
   67  cd TCS
   68  cd ASSIGNMENTKUBTERNESS
   69  cd learner-report-k8s-helm-jenkins
   70  cd k8s
   71  groups
   72  docker run hello-world
   73  minikube start --driver=docker
   74  kubectl apply -f jenkins-deployment.yaml
   75  kubectl apply -f jenkins-service.yaml
   76  nano jenkins-service.yaml
   77  kubectl apply -f jenkins-service.yaml
   78  kubectl get svc
   79  jenkins-service   NodePort   10.x.x.x   <none>   8080:30000/TCP   ...
   80  kubectl exec --namespace default -it deploy/jenkins -- cat /var/jenkins_home/secrets/initialAdminPassword
   81  minikube ip
   82  kubectl get pods
   83  kubectl get svc
   84  kubectl describe svc jenkins-service
   85  minikube tunnel
   86  kubectl port-forward svc/jenkins-service 8080:8080
   87  cd learnerReportCS_backend
   88  nano Jenkinsfile
   89  git add Jenkinsfile
   90  git commit -m "Add Jenkinsfile for CI/CD pipeline"
   91  git push origin main
   92  cd ~  # or any working directory
   93  git clone https://github.com/UnpredictablePrashant/learnerReportCS_backend.git
   94  cd learnerReportCS_backend
   95  nano Jenkinsfile
   96  git add Jenkinsfile
   97  git commit -m "Add Jenkinsfile for CI/CD pipeline"
   98  git push origin main
   99  git clone https://github.com/suvaatnbu/learnerReportCS_backend.git
  100  cd ~  # or any directory where you want to clone
  101  git clone https://github.com/suvaatnbu/learnerReportCS_backend.git
  102  cd learnerReportCS_backend
  103  git clone https://github.com/suvaatnbu/learnerReportCS_backend.git
  104  git add Jenkinsfile
  105  git commit -m "Add Jenkinsfile"
  106  git push origin main
  107  exit
  108  ls /mnt/d
  109  cs /mnt/d
  110  cd /mnt/d
  111  cd D:\TCS\ASSIGNMENTKUBTERNESS
  112  cd ASSIGNMENTKUBTERNESS
  113  cd learner-report-k8s-helm-jenkins
  114  cd k8s
  115  cd TCS
  116  cd ASSIGNMENTKUBTERNESS
  117  cd k8s
  118  cd learner-report-k8s-helm-jenkins
  119  cd k8s
  120  cd learnerReportCS-deployment
  121  # Initialize Git
  122  git init
  123  git remote add origin https://github.com/YourUsername/learnerReportCS-deployment.git
  124  # Add and commit files
  125  git add .
  126  git commit -m "Initial commit of Kubernetes, Helm, Jenkins deployment files"
  127  # Push to GitHub
  128  git branch -M main
  129  git push -u origin main
  130  cd ..
  131  cd learnerReportCS-deployment
  132  ls
  133  cd learnerReportCS-deployment
  134  # Initialize Git
  135  git init
  136  git remote add origin https://github.com/YourUsername/learnerReportCS-deployment.git
  137  # Add and commit files
  138  git add .
  139  git commit -m "Initial commit of Kubernetes, Helm, Jenkins deployment files"
  140  # Push to GitHub
  141  git branch -M main
  142  git push -u origin main
  143  git init
  144  git remote add origin https://github.com/YourUsername/learnerReportCS-deployment.git
  145  git add .
  146  git commit -m
  147  git branch -M main
  148  git push -u origin main
  149  git remote add origin https://github.com/suvaatnbu/learnerReportCS-deployment.git
  150  git add .
  151  git branch -M main
  152  git push -u origin main
  153  git init
  154  git add .
  155  git commit -m "Initial commit with Kubernetes, Helm, and Jenkins configuration"
  156  git branch -M main
  157  git remote add origin https://github.com/UnpredictablePrashant/learnerReportCS-deployment.git
  158  git push -u origin main
  159  git remote add origin https://github.com/UnpredictablePrashant/learnerReportCS-deployment.git
  160  git init
  161  git add .
  162  git commit -m "Initial commit with Kubernetes, Helm, and Jenkins configuration"
  163  git config --global user.email "suvaatnbu@gmail.com"
  164  git init
  165  git add .
  166  git config --global user.email "suvaatnbu@gmail.com"
  167  git commit -m "Initial commit with Kubernetes, Helm, and Jenkins configuration"
  168  git config --global user.name "Suvabrata Guharay"
  169  git config --global user.email "suvaatnbu@gmail.com"
  170  git commit -m "Initial commit with Kubernetes, Helm, and Jenkins configuration"
  171  git push -u origin main
  172  git remote remove origin
  173  git remote add origin https://github.com/UnpredictablePrashant/learnerReportCS-deployment.git
  174  git push -u origin main
  175  https://github.com/UnpredictablePrashant/learnerReportCS-deployment.git
  176  git remote remove origin       # Only if you added the wrong one before
  177  git remote add origin https://github.com/UnpredictablePrashant/learnerReportCS-deployment.git
  178  git push -u origin main
  179  git config --global credential.helper store
  180  git remote remove origin
  181  git remote add origin https://github.com/suvaatnbu/learnerReportCS-deployment.git
  182  git push -u origin main
  183  CD ..
  184  cd ..
  185  cd learnerReportCS-deployment
  186  cd k8s
  187  nano mongo-deployment.yaml
  188  git clone https://github.com/suvaatnbu/learnerReportCS-deployment.git
  189  cd learnerReportCS-deployment
  190  docker info
  191  kubectl cluster-info
  192  kubectl get nodes
  193  kubectl cluster-info
  194  kubectl get nodes
  195  exit
  196  cd "$env:APPDATA\Docker"
  197  Remove-Item -Recurse -Force "*"
  198  cd "$env:LOCALAPPDATA\Docker"
  199  Remove-Item -Recurse -Force "*"
  200  exit
  201  git --version
  202  ls /mnt/d
  203  cd /mnt/d
  204  cd TCS
  205  cd ASSIGNMENTKUBTERNESS
  206  cd learner-report-k8s-helm-jenkins
  207  cd learnerReportCS-deployment
  208  git add .
  209  git commit -m "your message"
  210  git push origin main
  211  git add .
  212  git commit -m "your message"
  213  git push origin main
  214  git add .
  215  git commit -m "Complete MERN K8s + Helm + Jenkins deployment"
  216  git remote add origin https://github.com/suvaatnbu/learnerReportCS-deployment.git
  217  git push -u origin main
  218  git clone https://github.com/suvaatnbu/learnerReportCS-deployment.git
  219  exit
  220  python lambda_function.py
  221  pip install
  222  sudo apt install python3-pip
  223  ls /mnt/d
  224  cd /mnt/d
  225  cd TCS
  226  cd ASSIGNMENT-SERVERLESS
  227  python lambda_function.py
  228  python3 lambda_function.py
  229  mkdir -p /mnt/d/TCS/ASSIGNMENT-SERVERLESS
  230  cd /mnt/d/TCS/ASSIGNMENT-SERVERLESS
  231  nano lambda_function.py
  232  python3 lambda_function.py
  233  pip install boto3
  234  python3 -m venv venv
  235  apt install python3.12-venv
  236  sudo apt update
  237  python3 -m venv venv
  238  source venv/bin/activate
  239  pip install boto3
  240  python lambda_function.py
  241  sudo apt update
  242  cd /mnt/d/TCS/ASSIGNMENT-SERVERLESS
  243  python3 -m venv venv
  244  source venv/bin/activate
  245  sudo apt update
  246  # Go to your project directory
  247  cd /mnt/d/TCS/ASSIGNMENT-SERVERLESS
  248  # Remove old venv if any
  249  rm -rf venv
  250  # Create new virtual environment
  251  python3 -m venv venv
  252  # Activate it
  253  source venv/bin/activate
  254  sudo apt update
  255  rm -rf venv
  256  python3 -m venv venv
  257  sudo apt install python3-venv -y
  258  rm -rf venv
  259  python3 -m venv venv
  260  source venv/bin/activate
  261  pip install boto3
  262  python lambda_function.py
  263  ec2 = boto3.client('ec2', region_name='us-east-1')  # Replace with your actual region
  264  ec2 = boto3.client('ec2', region_name='ap-south-1')  
  265  ec2 = boto3.client('ec2', region_name='ap-south-1'))  
  266  nano lambda_function.py
  267  python lambda_function.py
  268  aws configure
  269  sudo apt install awscli -y
  270  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  271  unzip awscliv2.zip
  272  sudo apt install unzip
  273  sudo ./aws/install
  274  rm -rf aws awscliv2.zip  # clean any previous attempt
  275  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  276  unzip awscliv2.zip
  277  ls aws/install
  278  sudo ./aws/install
  279  aws --version
  280  aws configure
  281  zip function.zip lambda_function.py
  282  sudo apt install zip
  283  zip function.zip lambda_function.py
  284  cd /mnt/d/TCS/ASSIGNMENT-SERVERLESS
  285  git init
  286  git remote add origin https://github.com/<your-username>/<repo-name>.git
  287  git add lambda_function.py
  288  git commit -m "Initial commit: Lambda function for EC2 Auto Start/Stop"
  289  git push -u origin main
  290  git init
  291  git remote add origin https://github.com/suvaatnbu/serverlessaaws.git
  292  git add lambda_function.py
  293  git commit -m "Initial commit: Lambda function for EC2 Auto Start/Stop"
  294  git push -u origin main
  295  nano .gitignore
  296  git add .
  297  git commit -m "Initial commit: Lambda function for EC2 Auto Start/Stop"
  298  git push -u origin main
  299  git push -u origin master
  300  nano README.md
  301  git push -u origin master
  302  git init
  303  git add .
  304  git commit -m
  305  git remote add origin https://github.com/suvaatnbu/serverlessaaws
  306  git push -u origin master
  307  git init
  308  git add .
  309  git commit -m
  310  git commit -m "Initial commit: Lambda function for EC2 Auto Start/Stop"
  311  git remote add origin https://github.com/suvaatnbu/serverlessaaws
  312  git push -u origin master
  313  nano lambda_s3_cleanup.py
  314  exit
  315  ls /mnt/d
  316  cd /mnt/d
  317  cd TCS
  318  cd ASSIGNMENT-SERVERLESS
  319  aws s3 ls s3://assigns3lambda
  320  nano ~/.aws/credentials
  321  aws s3 cp test.txt s3://your-bucket-name/
  322  aws s3api put-object-retention --bucket your-bucket-name --key test.txt   --retention '{"Mode":"GOVERNANCE","RetainUntilDate":"2024-04-01T00:00:00.000Z"}'
  323  git init
  324  git add .
  325  git commit -m "Initial commit: Lambda EC2 Auto Start/Stop"
  326  git remote add origin https://github.com/suvaatnbu/aws-ec2-automation.git
  327  git push -u origin master
  328  git pull origin master --rebase
  329  git push -u origin master
  330  git status
  331  git init
  332  git add .
  333  git commit -m "Initial commit: Lambda EC2 Auto Start/Stop"
  334  git remote add origin https://github.com/suvaatnbu/aws-ec2-automation.git
  335  git push -u origin master
  336  git pull origin master --rebase
  337  git push -u origin master
  338  git status
  339  helm install myapp ./mychart
  340  cd ..
  341  cd ASSIGNMENTKUBTERNESS
  342  sudo snap install helm
  343  suva
  344  sudo snap install helm
  345  helm install mern-app ./helm/mern-chart
  346  exit
  347  jenkins --version
  348  exit
  349  dpkg -l | grep jenkins
  350  systemctl status jenkins
  351  # 1. Update system
  352  sudo apt update && sudo apt upgrade -y
  353  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  354  sudo systemctl enable jenkins
  355  dpkg -l | grep jenkins
  356  # Install Java if not already
  357  sudo apt install openjdk-17-jdk -y
  358  dpkg -l | grep jenkins
  359  sudo systemctl start jenkins
  360  sudo apt update
  361  curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
  362  echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
  363  sudo apt update
  364  ls /lib/systemd/system/jenkins.service
  365  sudo apt remove --purge jenkins -y
  366  sudo apt update
  367  curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
  368  echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
  369  sudo apt update
  370  /lib/systemd/system/jenkins.service
  371  dpkg -l | grep jenkins
  372  sudo nano /etc/wsl.conf
  373  exit
  374  sudo apt update
  375  curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee   /usr/share/keyrings/jenkins-keyring.asc > /dev/null
  376  echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]   https://pkg.jenkins.io/debian-stable binary/ | sudo tee   /etc/apt/sources.list.d/jenkins.list > /dev/null
  377  sudo apt update
  378  apt list --upgradable
  379  sudo systemctl start jenkins
  380  wsl -l -v
  381  exit
  382  sudo nano /etc/wsl.conf
  383  exit
  384  ps -p 1 -o comm=
  385  # Update and install Java
  386  sudo apt update
  387  sudo systemctl start jenkins
  388  sudo apt install jenkins -y
  389  sudo systemctl start jenkins
  390  sudo systemctl enable jenkins
  391  sudo systemctl status jenkins
  392  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  393  ssh -i your-key.pem ubuntu@<EC2-PUBLIC-IP>
  394  ssh -i jenkins-server22 ubuntu@13.233.161.119
  395  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  396  sudo apt install unzip -y
  397  unzip awscliv2.zip
  398  ls /mnt/d
  399  ls -l
  400  ls /mnt/d
  401  cd d
  402  cd TCS
  403  ls /mnt/d
  404  cd /mnt/d
  405  cd TCS
  406  cd ASSIGNMENT-CONTAINER-ORCHISTATION
  407  ssh -i jenkins-server22.pem ubuntu@13.233.161.119
  408  chmod 400 jenkins-server22.pem
  409  ssh -i jenkins-server22.pem ubuntu@13.233.161.119
  410  ls -l jenkins-server22.pem
  411  # should show: -r-------- 1 youruser yourgroup ... jenkins-server22.pem
  412  chmod 400 jenkins-server22.pem
  413  ssh -i jenkins-server22.pem ubuntu@13.233.161.119 -vvv
  414  cat ~/.ssh/authorized_keys
  415  echo "ssh-rsa AAAA… yourkeycomment" >> ~/.ssh/authorized_keys
  416  chmod 600 ~/.ssh/authorized_keys
  417  mkdir -p ~/.ssh
  418  chmod 700 ~/.ssh
  419  echo "<your-public-key-ssh-rsa-…>" >> ~/.ssh/authorized_keys
  420  chmod 600 ~/.ssh/authorized_keys
  421  exit
  422  ls /mnt/d
  423  cd /mnt/d
  424  cd TCS
  425  cd ASSIGNMENT-CONTAINER-ORCHISTATION
  426  ssh -i jenkins-server22.pem ubuntu@13.233.161.119
  427  sudo mkdir -p /mnt/temp/home/ubuntu/.ssh
  428  sudo chmod 700 /mnt/temp/home/ubuntu/.ssh
  429  echo "13.233.161.119" | sudo tee -a /mnt/temp/home/ubuntu/.ssh/authorized_keys
  430  sudo chmod 600 /mnt/temp/home/ubuntu/.ssh/authorized_keys
  431  sudo chown -R 1000:1000 /mnt/temp/home/ubuntu/.ssh
  432  sudo umount /mnt/temp
  433  ssh -i jenkins-server22.pem ubuntu@13.233.161.119
  434  # Configure your credentials
  435  aws configure
  436  ssh -i jenkins-server22.pem ubuntu@13.233.161.119
  437  aws ssm start-session --target i-YOUR_INSTANCE_ID
  438  clear
  439  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  440  curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
  441  unzip awscliv2.zip
  442  sudo ./aws/install
  443  aws --version
  444  aws configure
  445  exit
  446  ls /mnt/d
  447  cd /mnt/d
  448  cd TCS
  449  cd SKILL-TEST2
  450  sudo systemctl start docker
  451  sudo systemctl enable docker
  452  sudo systemctl start jenkins
  453  dpkg -l | grep jenkins
  454  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  455  nano user-deployment.yaml
  456  nano product-deployment.yaml
  457  nano order-deployment.yaml
  458  nano gateway-deployment.yaml
  459  nano product-deployment.yaml
  460  apiVersion: apps/v1
  461  kind: Deployment
  462  metadata:
  463  spec:
  464  ---
  465  apiVersion: v1
  466  kind: Service
  467  metadata:
  468* 
  469  clear
  470  nano product-deployment.yaml
  471  nano order-deployment.yaml
  472  nano gateway-deployment.yaml
  473  nano user-service.yaml
  474  nano product-service.yaml
  475  nano order-service.yaml
  476  nano gateway-service.yaml
  477  minikube start
  478  nano user-deployment.yaml
  479  kubectl apply -f user-deployment.yaml
  480  kubectl apply -f user-service.yaml
  481  # Repeat for other services
  482  kubectl get pods
  483  kubectl port-forward service/gateway-service 3003:3003
  484  nano gateway-service.yaml
  485  kubectl get services
  486  nano gateway-deployment.yaml
  487  kubectl apply -f gateway-deployment.yaml
  488  kubectl get services
  489  kubectl port-forward service/gateway-service 3003:3003
  490  kubectl get pods
  491  kubectl get nodes
  492  kubectl describe pod $(kubectl get pods -l app=gateway -o name)
  493  kubectl get pods -l app=gateway
  494  kubectl describe pod gateway-deployment-78646845f8-k6m55
  495  your-dockerhub-username/gateway-service:latest
  496  docker build -t your-dockerhub-username/gateway-service:latest .
  497  docker build -t suvaatnbu/gateway-service:latest 
  498  docker build -t suvaatnbu/gateway-service:latest .
  499  docker buildx install
  500  docker buildx version
  501  mkdir -p ~/.docker/cli-plugins
  502  curl -Lo ~/.docker/cli-plugins/docker-buildx "https://github.com/docker/buildx/releases/latest/download/docker-buildx-linux-amd64"
  503  chmod +x ~/.docker/cli-plugins/docker-buildx
  504  docker buildx version
  505  mkdir -p ~/.docker/cli-plugins
  506  curl -Lo ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/latest/download/docker-buildx-linux-amd64
  507  chmod +x ~/.docker/cli-plugins/docker-buildx
  508  docker buildx version
  509  curl -L https://github.com/docker/buildx/releases/latest/download/docker-buildx-linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
  510  chmod +x ~/.docker/cli-plugins/docker-buildx
  511  docker buildx version
  512  mkdir -p ~/.docker/cli-plugins
  513  curl -L https://github.com/docker/buildx/releases/latest/download/docker-buildx-linux-amd64      -o ~/.docker/cli-plugins/docker-buildx
  514  chmod +x ~/.docker/cli-plugins/docker-buildx
  515  ls -l ~/.docker/cli-plugins/docker-buildx
  516  mkdir -p ~/.docker/cli-plugins
  517  wget -O ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/latest/download/docker-buildx-linux-amd64
  518  chmod +x ~/.docker/cli-plugins/docker-buildx
  519  mkdir -p ~/.docker/cli-plugins
  520  wget -O ~/.docker/cli-plugins/docker-buildx   https://github.com/docker/buildx/releases/download/v0.13.1/docker-buildx-linux-amd64
  521  chmod +x ~/.docker/cli-plugins/docker-buildx
  522  mkdir -p ~/.docker/cli-plugins
  523  wget -O ~/.docker/cli-plugins/docker-buildx   https://github.com/docker/buildx/releases/download/v0.11.2/buildx-v0.11.2.linux-amd64
  524  chmod +x ~/.docker/cli-plugins/docker-buildx
  525  ls -lh ~/.docker/cli-plugins/docker-buildx
  526  # ✅ File size should be ~14M
  527  docker buildx version
  528  # ✅ Output: github.com/docker/buildx v0.11.2
  529  docker buildx build -t suvaatnbu/gateway-service:latest .
  530  docker push suvaatnbu/gateway-service:latest
  531  docker buildx build -t suvaatnbu/gateway-service:latest .
  532  cd /mnt/d/TCS/SKILL-TEST2/gateway-service
  533  ls
  534  mkdir gateway-service
  535  cd gateway-service
  536  nano package.json
  537  nano index.js
  538  nano Dockerfile
  539  cd gateway-service
  540  docker buildx build -t suvaatnbu/gateway-service:latest .
  541  docker push suvaatnbu/gateway-service:latest
  542  docker buildx build -t suvaatnbu/gateway-service:latest .
  543  docker push suvaatnbu/gateway-service:latest
  544  docker info | grep Username
  545  docker login
  546  docker info | grep Username
  547  docker push suvaatnbu/gateway-service:latest
  548  image: suvaatnbu/gateway-service:latest
  549  cd ..
  550  image: suvaatnbu/gateway-service:latest
  551  kubectl apply -f gateway-deployment.yaml
  552  kubectl get pods
  553  kubectl get services
  554  kubectl port-forward service/gateway-service 3003:3003
  555  kubectl get pods -l app=gateway
  556  kubectl describe pod $(kubectl get pods -l app=gateway -o name)
  557  kubectl get pods -l app=gateway -o name
  558  kubectl describe pod gateway-deployment-78646845f8-k6m55
  559  nano gateway-deployment.yaml
  560  kubectl apply -f gateway-deployment.yaml
  561  kubectl get pods
  562  kubectl describe pod <your-updated-gateway-pod-name>
  563  kubectl get pods -l app=gateway
  564  kubectl port-forward service/gateway-service 3003:3003
  565  docker buildx build -t suvaatnbu/gateway-service:latest .
  566  docker push suvaatnbu/gateway-service:latest
  567  kubectl rollout restart deployment gateway-deployment
  568  curl http://localhost:3003/user
  569  kubectl port-forward service/gateway-service 3003:3003
  570  kubectl apply -f gateway-service.yaml
  571  kubectl port-forward service/gateway-service 3003:3003
  572  # Microservices Kubernetes Deployment
  573  ## 🚀 Minikube Setup
  574  ```bash
minikube start


  575  history suvalinux.txt
  576  history
  577  history > my_history.txt
